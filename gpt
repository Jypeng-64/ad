import cv2
import os

# Define the directories containing original images and binary images
original_dir = r'/media/densogup-1/8T/jyp/myad/data/mvtec_anomaly_detection/capsule/test/crack'
binary_dir =r'/media/densogup-1/8T/jyp/myad/data/mvtec_anomaly_detection/capsule/ground_truth/crack'
result_dir = '/media/densogup-1/8T/jyp/AD/EfficientAD/output0.3/draw_ori/capsule/test/crack'
os.makedirs(result_dir,exist_ok=True)
# Traverse the original directory and process each original image
for filename in os.listdir(original_dir):
    # Check if the file is an image
    if filename.endswith('.png') or filename.endswith('.jpg'):
        # Construct the paths to the original image and the corresponding binary image
        img_path = os.path.join(original_dir, filename)
        binary_path = os.path.join(binary_dir, filename)

        # Load the original image and the corresponding binary image
        img = cv2.imread(img_path)
        binary = cv2.imread(binary_path, cv2.IMREAD_GRAYSCALE)

        # Find contours in binary image
        contours, hierarchy = cv2.findContours(binary, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

        # Draw contours on original image
        cv2.drawContours(img, contours, -1, (0, 0, 255), 5)

        # Define the path to the result image
        result_path = os.path.join(result_dir, filename)

        # Save the result image
        cv2.imwrite(result_path, img)
